name: Pull & Run Docker

on: [push]

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/os-checker:latest

jobs:
  run:
    runs-on: ubuntu-latest
    if: false
    steps:
      - uses: actions/checkout@v4

      - name: Prepare config JSONs
        run: |
          sudo mkdir /check && sudo chmod -R 777 /check && cd /check
          echo '{"os-checker/os-checker-test-suite":{}}' >repos.json

      - name: Pull os-checker docker
        run: docker pull ${{ env.IMAGE }}

      - name: List images
        run: docker images --all && df -alh

      - name: Run os-checker docker
        run: docker run -v "$PWD":/tmp/_pwd_ -v /check:/check --env-file os-checker.env -e GH_TOKEN=${{ secrets.GH_TOKEN }} ${{ env.IMAGE }} /tmp/_pwd_/run.sh

      - name: View /check dir
        run: tree -L 4 -h /check

      - name: Upload pages artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: /check/dist

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: run

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
